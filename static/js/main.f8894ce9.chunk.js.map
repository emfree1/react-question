{"version":3,"sources":["component/Navigation/MenuToggle/MenuToggle.js","component/UI/Button/BackDrop/BackDrop.js","component/Navigation/Drower/Drower.js","hoc/Layout/Layout.js","component/ActiveQuest/AnswersList/AnswersItem/AnswersItem.js","component/ActiveQuest/AnswersList/AnswersList.js","component/ActiveQuest/ActiveQuest.js","component/UI/Button/Button.js","component/FinishQuestion/FinishQuestion.js","axios/axios.js","component/UI/Loader/Loader.js","containers/Quest/Quest.js","component/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","component/UI/Select/Select.js","containers/QuestCreator/QuestCreator.js","containers/QuestList/QuestList.js","App.js","serviceWorker.js","index.js"],"names":["MenuToggle","props","cls","isOpen","push","className","join","onClick","onToggle","BackDrop","links","to","label","exact","Drower","handleClick","onClose","map","link","index","key","activeClassName","this","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswersItem","classes","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuest","answerNumber","question","questionLength","Button","type","disabled","FinishQuestion","successCount","Object","keys","results","reduce","total","quest","length","onRetry","axios","create","baseURL","Loader","Quest","activeQuestion","isFinished","answerState","loader","onAnswerClickHandler","answerId","rightAnswerId","timeOut","window","setTimeout","clearTimeout","onRetryHandler","get","match","params","respons","data","console","log","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","value","onChange","autoComplete","errorMessage","Auth","formControls","email","validation","required","password","minLength","loginHandler","a","authData","returnSecureToken","Axios","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","trim","test","String","toLowerCase","onSubmit","renderInputs","createControl","config","validate","isValid","validateForm","isFormValid","hasOwnProperty","Auxiliary","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","quiz","sibmitHandler","addQuestionHandler","concat","questionItem","createQuizHandler","e","changeHandler","selectChangeHandler","select","renderControls","QuestList","quizes","name","forEach","renderQuizes","App","path","component","QuestCreator","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f8894ce9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./MenuToggle.css\";\r\n\r\nconst MenuToggle = (props) => {\r\n  const cls = [\"MenuToggle\", \"fa\"];\r\n\r\n  if (props.isOpen) {\r\n    cls.push(\"fa-times\");\r\n    cls.push('open')\r\n  } else {\r\n    cls.push(\"fa-bars\");\r\n  }\r\n\r\n  return <i className={cls.join(\" \")} onClick={props.onToggle} />;\r\n};\r\n\r\nexport default MenuToggle;\r\n","import React from 'react'\r\nimport './BackDrop.css'\r\n\r\nconst BackDrop = props => { \r\n    return (\r\n        <div className='BackDrop' onClick={props.onClick }>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop","import React, { Component } from \"react\";\r\nimport \"./Drower.css\";\r\nimport BackDrop from \"../../UI/Button/BackDrop/BackDrop\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst links = [\r\n  { to: \"/\", label: \"Список Тестів\", exact: true },\r\n  { to: \"/auth\", label: \"Авторизація\", exact: false },\r\n  { to: \"/quest-creator\", label: \"Створити тест\", exact: false },\r\n];\r\n\r\nclass Drower extends Component {\r\n  handleClick = () => {\r\n    this.props.onClose()\r\n  };\r\n\r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName=\"active\"\r\n            onClick={this.handleClick}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const cls = [\"Drower\"];\r\n\r\n    if (!this.props.isOpen) {\r\n      cls.push(\"close\");\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <nav className={cls.join(\" \")}>\r\n          <ul>{this.renderLinks()}</ul>\r\n        </nav>\r\n        {this.props.isOpen ? <BackDrop onClick={this.props.onClose} /> : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drower;\r\n","import React, { Component } from \"react\";\r\nimport \"./Layout.css\";\r\nimport MenuToggle from \"../../component/Navigation/MenuToggle/MenuToggle\";\r\nimport Drower from \"../../component/Navigation/Drower/Drower\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    menu: false,\r\n  };\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu,\r\n    });\r\n  };\r\n\r\n  menuCloseHandler= () => {\r\n      this.setState({\r\n          menu: false\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Layout\">\r\n        <Drower isOpen={this.state.menu} onClose={ this.menuCloseHandler} />\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n        <main>{this.props.children}</main>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react'\r\nimport './AnswersItem.css'\r\n\r\nconst AnswersItem = props =>  {\r\n\r\n    const classes = ['AnswersItem']\r\n\r\n    if (props.state) {\r\n        classes.push(props.state)\r\n    }\r\n    return (\r\n        <li className={classes.join(' ')} onClick={()=> props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswersItem\r\n","import React from \"react\";\r\nimport \"./AnswersList.css\";\r\nimport AnswersItem from \"./AnswersItem/AnswersItem\";\r\n\r\nconst AnswersList = (props) => (\r\n  <ul className=\"AnswersList\">\r\n    {props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswersItem\r\n          answer={answer}\r\n          key={index}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default AnswersList;\r\n","import React from 'react'\r\nimport './ActiveQuest.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuest = props =>(\r\n    <div className='ActiveQuest'>\r\n        <p className='Question'>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp; \r\n                {props.question}\r\n            </span>\r\n            <small>{props.answerNumber} з {props.questionLength}</small>\r\n        </p>\r\n        <AnswersList answers={props.answers} onAnswerClick={props.onAnswerClick} state={props.state} />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuest","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        'Button',\r\n        props.type,\r\n    ]\r\n\r\n    return (\r\n\r\n    <button className={cls.join(' ')} onClick={props.onClick} disabled={props.disabled}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport \"./FinishQuestion.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FinishQuestion = (props) => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === \"success\") {\r\n      total++;\r\n    }\r\n    return total;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"FinishQuestion\">\r\n      <ul>\r\n        {props.question.map((quest, index) => {\r\n          const classes = [\r\n            \"fa\",\r\n            props.results[quest.id] === \"error\"\r\n              ? \"fa-times error\"\r\n              : \"fa-check success\",\r\n          ];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}</strong>. &nbsp;\r\n              {quest.question}\r\n              <i className={classes.join(\" \")} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <p>\r\n        Правильно {successCount} з {props.question.length}\r\n      </p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">\r\n          Повторити\r\n        </Button>\r\n        <Link to='/'>\r\n          <Button type=\"successs\">Перейти до списку тестів</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishQuestion;\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-question-4f5cc.firebaseio.com/',\r\n})","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = (props) => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport \"./Quest.css\";\r\nimport ActiveQuest from \"../../component/ActiveQuest/ActiveQuest\";\r\nimport FinishQuestion from \"../../component/FinishQuestion/FinishQuestion\";\r\nimport axios from \"../../axios/axios\";\r\nimport Loader from \"../../component/UI/Loader/Loader\";\r\n\r\nclass Quest extends Component {\r\n  state = {\r\n    results: {}, //{ [id]: 'success'}\r\n    activeQuestion: 0,\r\n    isFinished: false,\r\n    answerState: null, // { [id]: 'success'}\r\n    loader: true,\r\n    quest: [],\r\n  };\r\n\r\n  onAnswerClickHandler = (answerId) => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0];\r\n      if (this.state.answerState[key] === \"success\") {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const question = this.state.quest[this.state.activeQuestion];\r\n    const results = this.state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[answerId]) {\r\n        results[answerId] = \"success\";\r\n      }\r\n      this.setState({\r\n        answerState: { [answerId]: \"success\" },\r\n        results,\r\n      });\r\n\r\n      const timeOut = window.setTimeout(() => {\r\n        if (this.isFinished()) {\r\n          this.setState({\r\n            isFinished: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null,\r\n          });\r\n        }\r\n        window.clearTimeout(timeOut);\r\n      }, 1000);\r\n    } else {\r\n      results[answerId] = \"error\";\r\n      this.setState({\r\n        answerState: { [answerId]: \"error\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  isFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quest.length;\r\n  }\r\n\r\n  onRetryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {},\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const respons = await axios.get(\r\n        `/quizes/${this.props.match.params.id}.json`\r\n      );\r\n      const quest = respons.data;\r\n\r\n      this.setState({\r\n        quest,\r\n        loader: false,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Quest\">\r\n        <div className=\"QuestWrapper\">\r\n          <h1>Дайте відповідь на всі Питання</h1>\r\n          {this.state.loader ? (\r\n            <Loader />\r\n          ) : this.state.isFinished ? (\r\n            <FinishQuestion\r\n              results={this.state.results}\r\n              question={this.state.quest}\r\n              onRetry={this.onRetryHandler}\r\n            />\r\n          ) : (\r\n            <ActiveQuest\r\n              answers={this.state.quest[this.state.activeQuestion].answers}\r\n              question={this.state.quest[this.state.activeQuestion].question}\r\n              onAnswerClick={this.onAnswerClickHandler}\r\n              questionLength={this.state.quest.length}\r\n              answerNumber={this.state.activeQuestion + 1}\r\n              state={this.state.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quest;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = (props) => {\r\n  const inputType = props.type || \"text\";\r\n  const cls = [\"Input\"];\r\n  const htmlFor = `${inputType} - ${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(\"invalid\");\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(\" \")}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        autoComplete='off'\r\n      />\r\n\r\n      {isInvalid(props) ? <span>{props.errorMessage || 'Введіть вірне значення'}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport \"./Auth.css\";\r\nimport Button from \"../../component/UI/Button/Button\";\r\nimport Input from \"../../component/UI/Input/Input\";\r\nimport Axios from \"axios\";\r\n\r\nfunction validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    formControls: {\r\n      email: {\r\n        value: \"\",\r\n        type: \"email\",\r\n        label: \"Email\",\r\n        errorMessage: \"Введіть коректний емеіл\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true,\r\n        },\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        type: \"password\",\r\n        label: \"Пароль\",\r\n        errorMessage: \"Введіть коректний пароль\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  loginHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true,\r\n    };\r\n    try {\r\n      const respons = await Axios.post(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDXEwEslZQnHtuB_h8KNQd4sy8dj9m1ECc\",\r\n        authData\r\n      );\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  registerHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true,\r\n    };\r\n    try {\r\n      const respons = await Axios.post(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDXEwEslZQnHtuB_h8KNQd4sy8dj9m1ECc\",\r\n        authData\r\n      );\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n    let isInvalid = true;\r\n\r\n    if (validation.required) {\r\n      isInvalid = value.trim() !== \"\" && isInvalid;\r\n    }\r\n\r\n    if (validation.email) {\r\n      isInvalid = validateEmail(value) && isInvalid;\r\n    }\r\n\r\n    if (validation.minLength) {\r\n      isInvalid = value.length >= validation.minLength && isInvalid;\r\n    }\r\n\r\n    return isInvalid;\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n    });\r\n  };\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          errorMessage={control.errorMessage}\r\n          shouldValidate={!!control.validation}\r\n          onChange={(event) => this.onChangeHandler(event, controlName)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\">\r\n        <div>\r\n          <h1>Авторизація</h1>\r\n\r\n          <form onSubmit={this.submitHandler} className=\"AuthFrom\">\r\n            {this.renderInputs()}\r\n\r\n            <Button type=\"success\" onClick={this.loginHandler}>\r\n              Увійти\r\n            </Button>\r\n            <Button type=\"primary\" onClick={this.registerHandler}>\r\n              Реєстрація\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation= null,) {\r\n    if(!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n  \r\n    for (let control in formControls) {\r\n      if (formControls.hasOwnProperty(control)) {\r\n        isFormValid = formControls[control].valid && isFormValid\r\n      }\r\n    }\r\n  \r\n    return isFormValid\r\n  }","const Auxiliary = props => props.children\r\nexport default Auxiliary","import React from \"react\";\r\nimport \"./Select.css\";\r\n\r\nconst Select = (props) => {\r\n  const htmlFor = `${props.label} -${Math.random()}`;\r\n\r\n  return (\r\n    <div className=\"Select\">\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select id={htmlFor} value={props.value} onChange={props.onChange}>\r\n        {props.options.map((option, index) => {\r\n            return (\r\n            <option value={option.value} key={option.value + index}>{option.text} </option>\r\n            )\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../component/UI/Button/Button\";\r\nimport \"./QuestCreator.css\";\r\nimport {\r\n  createControl,\r\n  validate,\r\n  validateForm,\r\n} from \"../../form/formFramework\";\r\nimport Input from \"../../component/UI/Input/Input\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Select from \"../../component/UI/Select/Select\";\r\nimport axios from \"../../axios/axios\";\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl(\r\n    {\r\n      label: `Вариант ${number}`,\r\n      errorMessage: \"Значение не может быть пустым\",\r\n      id: number,\r\n    },\r\n    { required: true }\r\n  );\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl(\r\n      {\r\n        label: \"Введите вопрос\",\r\n        errorMessage: \"Вопрос не может быть пустым\",\r\n      },\r\n      { required: true }\r\n    ),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4),\r\n  };\r\n}\r\n\r\nexport default class QuizCreator extends Component {\r\n  state = {\r\n    quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls(),\r\n  };\r\n\r\n  sibmitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  addQuestionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const quiz = this.state.quiz.concat();\r\n    const index = quiz.length + 1;\r\n\r\n    const {\r\n      question,\r\n      option1,\r\n      option2,\r\n      option3,\r\n      option4,\r\n    } = this.state.formControls;\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: index,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        { text: option1.value, id: option1.id },\r\n        { text: option2.value, id: option2.id },\r\n        { text: option3.value, id: option3.id },\r\n        { text: option4.value, id: option4.id },\r\n      ],\r\n    };\r\n\r\n    quiz.push(questionItem);\r\n\r\n    this.setState({\r\n      quiz,\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls(),\r\n    });\r\n  };\r\n\r\n  createQuizHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      axios.post(\"/quizes.json\", this.state.quiz);\r\n\r\n      this.setState({\r\n        quiz: [],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls(),\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls),\r\n    });\r\n  };\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={(event) =>\r\n              this.changeHandler(event.target.value, controlName)\r\n            }\r\n          />\r\n          {index === 0 ? <hr /> : null}\r\n        </Auxiliary>\r\n      );\r\n    });\r\n  }\r\n\r\n  selectChangeHandler = (event) => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const select = (\r\n      <Select\r\n        label=\"Выберите правильный ответ\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          { text: 1, value: 1 },\r\n          { text: 2, value: 2 },\r\n          { text: 3, value: 3 },\r\n          { text: 4, value: 4 },\r\n        ]}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={\"QuestCreator\"}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.state.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./QuestList.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"../../axios/axios\";\r\nimport Loader from \"../../component/UI/Loader/Loader\";\r\n\r\nclass QuestList extends Component {\r\n  state = {\r\n    quizes: [],\r\n    loader: true,\r\n  };\r\n\r\n  renderQuizes() {\r\n    return this.state.quizes.map((quest) => {\r\n      return (\r\n        <li key={quest.id}>\r\n          <NavLink to={\"/quest/\" + quest.id}> {quest.name}</NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const respons = await axios.get(\"/quizes.json\");\r\n\r\n      const quizes = [];\r\n\r\n      Object.keys(respons.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест ${index + 1}`,\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        quizes,\r\n        loader: false,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"QuestList\">\r\n        <div>\r\n          <h1>Список тестів</h1>\r\n\r\n          {this.state.loader ? <Loader /> : <ul>{this.renderQuizes()}</ul>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch} from 'react-router-dom'\nimport Quest from \"./containers/Quest/Quest\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuestCreator from \"./containers/QuestCreator/QuestCreator\";\nimport QuestList from \"./containers/QuestList/QuestList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path='/auth' component={Auth}/>\n          <Route path='/quest-creator' component={QuestCreator}/>\n          <Route path='/quest/:id' component={Quest}/>\n          <Route path='/' component={QuestList}/>\n        </Switch>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}